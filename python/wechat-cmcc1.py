#!/usr/bin/env python
#_*_ coding:utf-8 _*_

import urllib2
import urllib
import json
import httplib
import re
import datetime
import sys
import os
import time
import Skype4Py

number1 = '+8618601355602'
number2 = '+8618601355602'
number3 = '+8618601355602'

def getDatetimeFromStr(s):
	format = '%Y-%m-%d %H:%M:%S'
	return datetime.datetime.strptime(s, format)

def previous_hour():
    dt = datetime.datetime.now()
    dt2 = dt.strftime('%Y-%m-%d %H')+":00:00"
    return getDatetimeFromStr(dt2)-datetime.timedelta(hours=1)

def wechat_send(token, wechat_msg, users):
    data={
        "touser":users,
        "msgtype":"text",
        "agentid":"0",
        "text":{
            "content":wechat_msg,
        },
    }
    data=json.dumps(data,ensure_ascii=False)
    msm_post='https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=%s'%token
    f=urllib2.urlopen(msm_post,data)
    content =f.read()
    f.close
    print content

CallStatus = 0
skype = Skype4Py.Skype()

def OnCall(call, status):
    global CallStatus
    CallStatus = status
    print 'Call status: ' + skype.Convert.CallStatusToText(status)

def skype_call_tel(number):
    #skype = Skype4Py.Skype()
    skype.Attach()
    skype.OnCallStatus = OnCall
    
    print 'Calling ' + number + '...'
    skype.PlaceCall(number)
    
    CallIsFailed = set ([Skype4Py.clsFailed, Skype4Py.clsMissed, Skype4Py.clsRefused, Skype4Py.clsBusy, Skype4Py.clsCancelled]);
    while 1:
	if CallStatus == Skype4Py.clsFinished:
		print "Call Connected..."
		return 'Connected'
	
	if CallStatus in CallIsFailed:
		print "Call Failed..."
		return 'NotConnected'
	else:
		pass

if __name__ == '__main__':

    # argv[1] is the alarm file generated by perl
    # argv[2] is the wechat receiver
    inputfile = sys.argv[1]
    receiver = sys.argv[2]

    #we get token from wechat first. It should last 7200 seconds
    corpid='wx1692320648865972'
    corpsecret='RilwFUtsR1mo9Ca9NoCw0O1bdBJXw3WrEp0u0RL-fu11k_OUHvqSRY4elmpO5UZ-'
    get_token='https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=%s&corpsecret=%s'%(corpid,corpsecret)
    f=urllib2.urlopen(get_token)
    s=f.read()
    f.close()
    j=json.loads(s)
    token=j['access_token']

    #Process alarms
    alarmfile = open(inputfile)
    msg = ""

    for line in alarmfile:
	#check all Major and Minor alarms
        if re.search(r"Major|Minor", line):
            dt = re.search(r"(\d+-\d+-\d+ \d+:\d+:\d+)", line).group(1)
            if getDatetimeFromStr(dt) >= previous_hour():
                msg = msg + line + "\n"
	#check Fabric drops
	elif "Fabric" in line:
	    routername = line.split(',')[0]
	    counter = line.split(',')[-1].replace(' delta: ','')
	    pps = int(counter)/3600
	    msg = routername + " Fabric Drop Average PPS: " + str(pps) + "\n\n"

    if len(msg) != 0 and len(msg) <= 2000:
        wechat_send(token, msg, receiver)
    else:
	loop = len(msg) // 2000
	for i in range(loop+1):
		wechat_send(token, msg[i*2000:(i+1)*2000], receiver)
    alarmfile.close()

    #sleep 5 minutes to make sure somebody picked up phone. Then call again.
    alarmfile = open(inputfile)
    for line in alarmfile:
	if "Fabric" in line:
		print "Call 1st..."
		if skype_call_tel(number1) == 'NotConnected':
			print "1st on Call Good, exit now..."
			sys.exit()
		else:
			print "Call 2nd..."
			time.sleep(300)
			if skype_call_tel(number2) == 'Connected':
				print "2nd on Call Good, exit now..."
				sys.exit()
			else:
				print "Need to call 3rd..."
				skype_call_tel(number3)
    				alarmfile.close()
				sys.exit()
